<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <packaging>pom</packaging>
  <modules>
    <module>sdk-java</module>
    <module>confidence-proto</module>
    <module>openfeature-provider</module>
    <module>openfeature-provider-local</module>
    <module>openfeature-provider-shared</module>
  </modules>

  <distributionManagement>
    <snapshotRepository>
      <id>central-portal-snapshots</id>
      <url>https://central.sonatype.com/repository/maven-snapshots/</url>
    </snapshotRepository>
    <repository>
      <id>central</id>
      <url>https://central.sonatype.com/repository/maven-releases/</url>
    </repository>
  </distributionManagement>

  <!-- x-release-please-start-version -->
  <groupId>com.spotify.confidence</groupId>
  <artifactId>confidence-sdk-java</artifactId>
  <version>0.2.4</version>
  <!---x-release-please-end-->
  <url>https://github.com/spotify/confidence-sdk-java</url>
  <description>Confidence SDK for Java</description>

  <properties>
    <!-- Required by maven to compile Java 11 -->
    <maven.compiler.release>11</maven.compiler.release>
    <!-- Prevents the compiler version from resetting locally in Intellij -->
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>

    <grpc.version>1.70.0</grpc.version>
    <protobuf.version>3.25.5</protobuf.version>
    <common.protos.version>2.54.1</common.protos.version>
    <mockito.version>4.11.0</mockito.version>
    <jupiter.version>5.10.0</jupiter.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>

  <name>Confidence SDK</name>
  <organization>
      <name>com.spotify</name>
      <url>https://github.com/spotify</url>
  </organization>

  <issueManagement>
      <system>GitHub</system>
      <url>https://github.com/spotify/confidence-sdk-java/issues</url>
  </issueManagement>

  <licenses>
      <license>
          <name>Apache License 2.0</name>
          <url>https://github.com/spotify/confidence-sdk-java/blob/main/LICENSE</url>
          <distribution>repo</distribution>
      </license>
  </licenses>

  <scm>
      <url>https://github.com/spotify/confidence-sdk-java</url>
      <connection>
          scm:git:git@github.com:spotify/confidence-sdk-java.git
      </connection>
      <developerConnection>
          scm:git:git@github.com:spotify/confidence-sdk-java.git
      </developerConnection>
  </scm>
  <developers>
      <developer>
        <id>fdema</id>
        <email>fdema@spotify.com</email>
        <name>Fabrizio Demaria</name>
      </developer>
      <developer>
          <id>nicklasl</id>
          <email>nicklasl@spotify.com</email>
          <name>Nicklas Lundin</name>
      </developer>
      <developer>
          <id>DennisPersson</id>
          <email>dennisp@spotify.com</email>
          <name>Dennis Persson</name>
      </developer>
      <developer>
          <id>mfranberg</id>
          <email>mfranberg@spotify.com</email>
          <name>Mattias Fr√•nberg</name>
      </developer>
      <developer>
        <id>andreas-karlsson</id>
        <email>andreask@spotify.com</email>
        <name>Andreas Karlsson</name>
      </developer>
  </developers>

  <!-- No dependencies in root POM - use dependencyManagement only -->

  <dependencyManagement>
    <dependencies>
      <!-- Import gRPC BOM to manage all gRPC versions consistently -->
      <dependency>
        <groupId>io.grpc</groupId>
        <artifactId>grpc-bom</artifactId>
        <version>${grpc.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      
      <!-- Protobuf and gRPC related dependencies -->
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java-util</artifactId>
        <version>${protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.api.grpc</groupId>
        <artifactId>grpc-google-common-protos</artifactId>
        <version>${common.protos.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.api.grpc</groupId>
        <artifactId>proto-google-common-protos</artifactId>
        <version>${common.protos.version}</version>
      </dependency>
      
      <!-- Annotation and utility libraries -->
      <dependency>
        <groupId>javax.annotation</groupId>
        <artifactId>javax.annotation-api</artifactId>
        <version>1.3.2</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>3.0.2</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>2.0.12</version>
      </dependency>
      
      <!-- Force specific versions for problematic transitive dependencies -->
      <dependency>
        <groupId>org.checkerframework</groupId>
        <artifactId>checker-qual</artifactId>
        <version>3.33.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>2.18.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>32.1.3-jre</version>
      </dependency>
      <dependency>
        <groupId>io.perfmark</groupId>
        <artifactId>perfmark-api</artifactId>
        <version>0.27.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.android</groupId>
        <artifactId>annotations</artifactId>
        <version>4.1.1.4</version>
      </dependency>
      <dependency>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-annotations</artifactId>
        <version>1.24</version>
      </dependency>
      <dependency>
        <groupId>com.google.j2objc</groupId>
        <artifactId>j2objc-annotations</artifactId>
        <version>3.0.0</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>failureaccess</artifactId>
        <version>1.0.2</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>2.11.0</version>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>2.15.4</version>
      </dependency>
      
      <!-- Test dependencies -->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>1.4.14</version>
      </dependency>
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>1.4.14</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.2</version>
      </dependency>
      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.24.2</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter</artifactId>
        <version>${jupiter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${jupiter.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-inline</artifactId>
        <version>${mockito.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.1</version>
      </extension>
    </extensions>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource><directory>src/main/proto</directory></resource>
    </resources>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>3.6.0</version>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludePackageNames>
            com.spotify.confidence.flags.*
          </excludePackageNames>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.6.1</version>
        <executions>
          <execution>
            <id>analyze</id>
            <phase>verify</phase>
            <goals>
              <goal>analyze-only</goal>
            </goals>
            <configuration>
              <failOnWarning>true</failOnWarning>
              <ignoredNonTestScopedDependencies>
                <!-- False positives - these ARE used in main code -->
                <ignoredNonTestScopedDependency>com.google.protobuf:protobuf-java-util:jar</ignoredNonTestScopedDependency>
                <ignoredNonTestScopedDependency>io.grpc:grpc-stub:jar</ignoredNonTestScopedDependency>
              </ignoredNonTestScopedDependencies>
              <ignoredUnusedDeclaredDependencies>
                <!-- Dependencies needed at runtime but not compile-time -->
                <ignoredUnusedDeclaredDependency>ch.qos.logback:logback-classic:jar</ignoredUnusedDeclaredDependency>
                <ignoredUnusedDeclaredDependency>io.grpc:grpc-netty-shaded:jar</ignoredUnusedDeclaredDependency>
                <ignoredUnusedDeclaredDependency>javax.annotation:javax.annotation-api:jar</ignoredUnusedDeclaredDependency>
                <!-- Proto compilation dependencies -->
                <ignoredUnusedDeclaredDependency>com.google.protobuf:protobuf-java-util:jar</ignoredUnusedDeclaredDependency>
                <ignoredUnusedDeclaredDependency>com.google.api.grpc:grpc-google-common-protos:jar</ignoredUnusedDeclaredDependency>
                <ignoredUnusedDeclaredDependency>com.google.code.findbugs:jsr305:jar</ignoredUnusedDeclaredDependency>
                <!-- Test framework aggregates -->
                <ignoredUnusedDeclaredDependency>org.junit.jupiter:junit-jupiter:jar</ignoredUnusedDeclaredDependency>
                <!-- Mockito inline needed for final class mocking at runtime -->
                <ignoredUnusedDeclaredDependency>org.mockito:mockito-inline:jar</ignoredUnusedDeclaredDependency>
                <ignoredUnusedDeclaredDependency>net.bytebuddy:byte-buddy:jar</ignoredUnusedDeclaredDependency>
              </ignoredUnusedDeclaredDependencies>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.spotify.fmt</groupId>
        <artifactId>fmt-maven-plugin</artifactId>
        <version>2.25</version>
        <executions>
          <execution>
            <phase>validate</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.4.1</version>
        <configuration>
          <rules>
            <dependencyConvergence/>
            <banDuplicatePomDependencyVersions/>
            <requireJavaVersion>
              <version>[11,)</version>
            </requireJavaVersion>
            <requireMavenVersion>
              <version>[3.6.0,)</version>
            </requireMavenVersion>
            <bannedDependencies>
              <excludes>
                <exclude>commons-logging:commons-logging</exclude>
                <exclude>log4j:log4j</exclude>
              </excludes>
              <message>Use slf4j instead of commons-logging or log4j</message>
            </bannedDependencies>
            <requireReleaseDeps>
              <message>No Snapshots Allowed!</message>
              <onlyWhenRelease>true</onlyWhenRelease>
            </requireReleaseDeps>
          </rules>
        </configuration>
        <executions>
          <execution>
            <id>enforce</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>1.8.0</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <artifactId>maven-site-plugin</artifactId>
        <version>3.12.1</version>
      </plugin>
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.2</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.10</version>
      </plugin>
      <plugin>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.2.1</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>10.6.0</version>
          </dependency>
        </dependencies>
        <configuration combine.self="override">
          <configLocation>checkstyle.xml</configLocation>
          <consoleOutput>true</consoleOutput>
          <failOnViolation>true</failOnViolation>
          <logViolationsToConsole>true</logViolationsToConsole>
          <sourceDirectories>${project.build.sourceDirectory},${project.build.testSourceDirectory}</sourceDirectories>
        </configuration>
        <executions>
          <execution>
            <id>default</id>
            <phase>process-classes</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>3.3.0</version>
        <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar-no-fork</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-gpg-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <!-- Prevent gpg from using pinentry programs -->
          <gpgArguments>
            <arg>--pinentry-mode</arg>
            <arg>loopback</arg>
            <arg>--no-tty</arg>
          </gpgArguments>
        </configuration>
        <executions>
          <execution>
            <id>sign-artifacts</id>
            <phase>install</phase>
            <goals>
              <goal>sign</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.sonatype.central</groupId>
        <artifactId>central-publishing-maven-plugin</artifactId>
        <version>0.8.0</version>
        <extensions>true</extensions>
        <configuration>
          <publishingServerId>central</publishingServerId>
          <deploymentName>Confidence Java SDK</deploymentName>
          <autoPublish>true</autoPublish>
          <waitUntil>published</waitUntil>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.basepom.maven</groupId>
        <artifactId>duplicate-finder-maven-plugin</artifactId>
        <version>2.0.1</version>
        <executions>
          <execution>
            <id>default</id>
            <phase>verify</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <printEqualFiles>false</printEqualFiles>
          <failBuildInCaseOfDifferentContentConflict>true</failBuildInCaseOfDifferentContentConflict>
          <failBuildInCaseOfEqualContentConflict>false</failBuildInCaseOfEqualContentConflict>
          <failBuildInCaseOfConflict>true</failBuildInCaseOfConflict>
          <checkCompileClasspath>true</checkCompileClasspath>
          <checkRuntimeClasspath>true</checkRuntimeClasspath>
          <checkTestClasspath>false</checkTestClasspath>
          <!-- Ignore proto-generated duplicates between google common protos and our proto module -->
          <ignoredResourcePatterns>
            <ignoredResourcePattern>google/api/.*\.proto</ignoredResourcePattern>
            <ignoredResourcePattern>google/type/.*\.proto</ignoredResourcePattern>
          </ignoredResourcePatterns>
          <ignoredClassPatterns>
            <ignoredClassPattern>com\.google\.api\..*</ignoredClassPattern>
            <ignoredClassPattern>com\.google\.type\..*</ignoredClassPattern>
          </ignoredClassPatterns>
        </configuration>
      </plugin>

    </plugins>
  </build>

</project>
